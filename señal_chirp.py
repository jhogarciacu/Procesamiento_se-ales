# -*- coding: utf-8 -*-
"""Señal_Chirp.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CWtsp98qxQZvN9HCZnLRiIDqNTxl9g7V

# **SEÑAL CHIRP**

Es una señal la cual su frecuencia aumenta o disminuye de la misma manera en que lo hace el tiempo.
"""

from google.colab import drive
drive.mount('/content/drive')

"""# **Caracteristicas**

- **Variación lineal de frecuencia:**
La frecuencia de la señal cambia de manera constante y uniforme en el tiempo, creando un efecto de "chirrido".

- **Inspiración biológica:**
El término "chirp" proviene de la observación del canto de los pájaros, donde la frecuencia de las notas cambia de manera similar.

- **Aplicaciones:**
Las señales chirp se utilizan en diversas áreas, como la medición de respuesta de frecuencia de sistemas lineales, la detección de objetos en radar, y en el procesamiento de señales.

- **Espectro:**
El espectro de una señal chirp lineal presenta una banda de frecuencias que corresponde a la duración y el rango de frecuencia de la señal.

- **Compresión de pulso:**
En aplicaciones como el radar, las señales chirp se pueden comprimir en el tiempo, lo que mejora la resolución y la calidad de las imágenes.
"""

#librerias usadas
import numpy as np
import matplotlib.pyplot as plt
from scipy.fft import fft, fftfreq

# Parámetros de la señal
fs = 1000           # Frecuencia de muestreo en Hz
T = 2               # Duración de la señal en segundos
t = np.linspace(0, T, int(fs*T), endpoint=False)  # Vector de tiempo

# Frecuencias inicial y final
f0 = 5              # Frecuencia inicial en Hz
f1 = 100            # Frecuencia final en Hz

# Generar señal tipo chirp (frecuencia aumenta linealmente con el tiempo)
k = (f1 - f0) / T   # Tasa de cambio de frecuencia
phi = 2 * np.pi * (f0 * t + 0.5 * k * t**2)
signal = np.sin(phi)

# Transformada de Fourier
N = len(signal)
yf = fft(signal)
xf = fftfreq(N, 1/fs)

# Mostrar solo la parte positiva del espectro
xf_pos = xf[:N//2]
yf_pos = 2.0/N * np.abs(yf[:N//2])

# Graficar señal y su transformada de Fourier
plt.figure(figsize=(12, 5))

plt.subplot(1, 2, 1)
plt.plot(t, signal)
plt.title('Señal Chirp Lineal')
plt.xlabel('Tiempo [s]')
plt.ylabel('Amplitud')

plt.subplot(1, 2, 2)
plt.plot(xf_pos, yf_pos)
plt.title('Transformada de Fourier')
plt.xlabel('Frecuencia [Hz]')
plt.ylabel('Magnitud')

plt.tight_layout()
plt.show()