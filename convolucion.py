# -*- coding: utf-8 -*-
"""Convolucion.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FpjjXBGajYAWSNv4N7ySQfGI_z20UaFe
"""

import numpy as np
import matplotlib.pyplot as plt

# Parámetros
fs = 1000           # Frecuencia de muestreo en Hz
T = 1               # Duración en segundos
t = np.linspace(0, T, int(fs*T), endpoint=False)  # Vector de tiempo

# Señal original (50 Hz)
f_original = 50
signal_original = np.sin(2 * np.pi * f_original * t)

# Lista de frecuencias para las otras señales
frecuencias = [100, 200, 300]

# Crear figura
plt.figure(figsize=(12, 12))

for i, freq in enumerate(frecuencias):
    # Señal de la frecuencia actual
    signal_freq = np.sin(2 * np.pi * freq * t)
    conv_result = np.convolve(signal_original, signal_freq, mode='same')

    # Posición base para graficas
    base = i * 3 + 1

    # Graficar señal original
    plt.subplot(len(frecuencias)*3, 1, base)
    plt.plot(t, signal_original)
    plt.title(f'[F = {freq} Hz] Señal original (50 Hz)')
    plt.ylabel('Amplitud')
    plt.grid(True)

    # Graficar señal con nueva frecuencia
    plt.subplot(len(frecuencias)*3, 1, base + 1)
    plt.plot(t, signal_freq)
    plt.title(f'[F = {freq} Hz] Señal de {freq} Hz')
    plt.ylabel('Amplitud')
    plt.grid(True)

    # Graficar la convolución
    plt.subplot(len(frecuencias)*3, 1, base + 2)
    plt.plot(t, conv_result)
    plt.title(f'[F = {freq} Hz] Convolución entre señales (50 Hz vs {freq} Hz)')
    plt.xlabel('Tiempo [s]')
    plt.ylabel('Amplitud')
    plt.grid(True)

plt.tight_layout()
plt.show()

